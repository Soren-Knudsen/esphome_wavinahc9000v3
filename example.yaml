esphome:
  name: wavinahc9000v3
  friendly_name: wavinahc9000v3

esp32:
  board: esp32dev
  framework:
    type: esp-idf

external_components:
  - source:
      type: local
      path: esphome/components
    components: [wavin_ahc9000]

logger:
  level: DEBUG
  logs:
    wavin_ahc9000: DEBUG

uart:
  id: uart_wavin
  # Prefer stable UART pins (e.g. 16/17) to avoid strapping pin issues
  tx_pin: GPIO17
  rx_pin: GPIO16
  baud_rate: 38400
  stop_bits: 1
  parity: NONE

wavin_ahc9000:
  id: wavin
  uart_id: uart_wavin
  # Regular polling interval; optionally lower temporarily for quicker discovery
  update_interval: 5s
  # Optional: speed up initial discovery (uncomment briefly)
  # poll_channels_per_cycle: 8
  # update_interval: 2s
  allow_mode_writes: false

climate:
  - platform: wavin_ahc9000
    wavin_ahc9000_id: wavin
    name: "Zone 1"
    channel: 1
  - platform: wavin_ahc9000
    wavin_ahc9000_id: wavin
    name: "Living Area"
    members: [2,3]

sensor:
  - platform: wavin_ahc9000
    wavin_ahc9000_id: wavin
    name: "Zone 1 Battery"
    channel: 1
    type: battery
  - platform: wavin_ahc9000
    wavin_ahc9000_id: wavin
    name: "Zone 1 Temperature"
    channel: 1
    type: temperature

text_sensor:
  - platform: wavin_ahc9000
    wavin_ahc9000_id: wavin
    name: "Wavin YAML Suggestion"

api:
  services:
    - service: wavin_strict_heat
      variables:
        channel: int
      then:
        - lambda: |-
            // Force baseline 0x4000 on the selected channel
            id(wavin).normalize_channel_config(channel, false);
    - service: wavin_generate_yaml
      then:
        - lambda: |-
            id(wavin).generate_yaml_suggestion();
    # Optional: push the full YAML to a Home Assistant persistent notification
    - service: wavin_notify_yaml
      then:
        - homeassistant.service:
            service: persistent_notification.create
            data:
              title: Wavin YAML Suggestion
              message: !lambda |-
                return id(wavin).get_yaml_suggestion().c_str();

    # Optional: write YAML into an input_text (create input_text.wavin_yaml in HA first)
    # - service: wavin_write_yaml_to_input_text
    #   then:
    #     - homeassistant.service:
    #         service: input_text.set_value
    #         data:
    #           entity_id: input_text.wavin_yaml
    #           value: !lambda |-
    #             return id(wavin).get_yaml_suggestion().c_str();

wifi:
  ssid: "<your-ssid>"
  password: "<your-password>"

ota:
